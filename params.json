{"name":"orgachat.js","tagline":"A node.js based chat, used to help organizing olympia like games","body":"###Requirements\r\n- Apache web server\r\n- node.js (>= 0.9)\r\n   - socket.io\r\n   - underscore.js\r\n   - winston\r\n- (Of course) A device with Internet connection (at least) for each station.\r\n\r\n###Usage\r\n1. Download the package and place in into a browser accesible folder of you apache web server. (I assume in the following, that you've choses ´orgachat.js´.)\r\n2. Install the node.js required modules via npm.\r\n3. Configure the application via its ´config.json´ file.\r\n4. Distribute the passwords and station/team names.\r\n5. Login as admin at ´orgachat.js´.\r\n6. At least one person of each station should login at ´orgachat.js´ and at least one member of each team should register at ´orgachat.js/part´.\r\n7. To tell all others that a new round will begin soon, type ´#set_round N´ in to the chat, with ´N´ being the number of the round (round numbers start at zero).\r\nTeam members see then, the station they've to play on next and station people see the next to teams that play against each other in this round.\r\n8. Start the round (specifically its timer) by typing ´#start_round_timer´. A timer will now show everyone logged in/registered in the application the count down till the start of the round and after the countdown the time live left in this round.\r\n9. The station crew no enters the points each team achieved at their station and send it to the admin by clicking the ´Store´ button.\r\n10. Return to 7. if the last round wasn't the final.\r\n11. Show the group ranking by typing ´#ranking´.\r\n\r\nAnd of course, this application, based on a chat, can be used as a chat. ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}